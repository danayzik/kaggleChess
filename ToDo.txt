Refactor gameresult check in evaluate

Move ordering:
Late move reductions
Test losing captures
Aspiration windows
Improve TT

Eval:
-Hanging piece
-Pin
-Skewer
- Rook on king/queen row/column
- Bishop on king/queen diagonal
- pawn structure
-Safe mobility?


search:
- Add time limit
-extensions
-Quiescence


Small opt:

- since i'm saving board state, evaluate based on what changed only. (specifically mg and eg phase)

- Refactor cpp code, make github

Ideas:
- Train by minimax eval or by static eval?
- Many mini neural networks for heuristic eval function based on combination of pieces left.
- Learn about MCTS, implement MCTS based on remaining material
- Implement a network that learns when to switch to MCTS


Visuals:
- Add eval to visuals
- Sometimes squares aren't highlighted - debug

AI:
- Genetic algo check


Training:
- Get games database
- Train eval function


Other:
- Compare subprocess to extension module
- kill bot when game ends on kaggle.
- Memory profile and cpu profile the bot
